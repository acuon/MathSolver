plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.mathsolver'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.mathsolver"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField "String", "BASE_URL", "\"" + getBaseUrl() + "\""
        buildConfigField "String", "APP_ID", "\"" + getAppId() + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Jetpack Compose

    implementation "com.google.accompanist:accompanist-pager:0.19.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.19.0"

//    implementation "androidx.activity:activity-compose:1.4.0"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-compose"
//    implementation "androidx.compose.ui:compose-ui"
//    implementation "androidx.navigation:navigation-compose"
//    implementation "androidx.compose.material:material"
//    implementation "androidx.compose.runtime:runtime-livedata"


    // Room Database
    implementation "androidx.room:room-runtime:2.5.2"
    kapt "androidx.room:room-compiler:2.5.2"

    // Retrofit for API Requests
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Hilt (Dagger Hilt for Dependency Injection)
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"


    // Coroutines for Async Operations
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Android ViewModel and LiveData (if needed)
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"

    // Android Room Database (if needed)
    implementation "androidx.room:room-ktx:2.5.2"

    // Gson (for JSON parsing with Retrofit)
    implementation "com.google.code.gson:gson:2.8.9"

    // JUnit 4 for Android testing
    androidTestImplementation 'androidx.test:runner:1.5.2'

    // Hilt for Android testing
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'

    // UI testing with Compose
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.6.0-alpha04'

    // MockK for mocking dependencies
    testImplementation "io.mockk:mockk:1.12.0"

    // Coroutine testing support
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    // Mock web server for testing network requests
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2'

}

static def getBaseUrl() {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('local.properties')))
    return props['BASE_URL']
}

static def getAppId() {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('local.properties')))
    return props['APP_ID']
}